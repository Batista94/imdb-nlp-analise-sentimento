{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":95829,"sourceType":"datasetVersion","datasetId":51413}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:18.624113Z","iopub.execute_input":"2025-03-25T19:11:18.624333Z","iopub.status.idle":"2025-03-25T19:11:18.937962Z","shell.execute_reply.started":"2025-03-25T19:11:18.624312Z","shell.execute_reply":"2025-03-25T19:11:18.937096Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/imdb-ptbr/imdb-reviews-pt-br.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# Imports do Projeto","metadata":{}},{"cell_type":"code","source":"import torch\nprint(torch.cuda.is_available())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:18.938856Z","iopub.execute_input":"2025-03-25T19:11:18.939307Z","iopub.status.idle":"2025-03-25T19:11:20.553229Z","shell.execute_reply.started":"2025-03-25T19:11:18.939273Z","shell.execute_reply":"2025-03-25T19:11:20.552478Z"}},"outputs":[{"name":"stdout","text":"True\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import os\nimport pandas as pd\nimport numpy as np\nimport torch\nfrom torch.optim import AdamW\nfrom torch.utils.data import Dataset, DataLoader\nimport time\nimport re\nfrom transformers import (\n    DistilBertTokenizer,  # Tokenizador específico do DistilBERT\n    DistilBertForSequenceClassification,  # Modelo para classificação\n    get_linear_schedule_with_warmup\n)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:20.554001Z","iopub.execute_input":"2025-03-25T19:11:20.554349Z","iopub.status.idle":"2025-03-25T19:11:25.154216Z","shell.execute_reply.started":"2025-03-25T19:11:20.554327Z","shell.execute_reply":"2025-03-25T19:11:25.153273Z"}},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"# Pré-processamento dos dados","metadata":{}},{"cell_type":"code","source":"# Definiçao de semente aleatoria para consistencia\nSEED = 42\nnp.random.seed(SEED)\ntorch.manual_seed(SEED)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:25.155179Z","iopub.execute_input":"2025-03-25T19:11:25.155828Z","iopub.status.idle":"2025-03-25T19:11:25.168002Z","shell.execute_reply.started":"2025-03-25T19:11:25.155795Z","shell.execute_reply":"2025-03-25T19:11:25.167344Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"<torch._C.Generator at 0x7a07efd85d10>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"# Verificar disponibilidade de GPU\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nprint(f\"Usando dispositivo: {device}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:25.170185Z","iopub.execute_input":"2025-03-25T19:11:25.170419Z","iopub.status.idle":"2025-03-25T19:11:25.185061Z","shell.execute_reply.started":"2025-03-25T19:11:25.170372Z","shell.execute_reply":"2025-03-25T19:11:25.184366Z"}},"outputs":[{"name":"stdout","text":"Usando dispositivo: cuda\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"reviews_train_df = pd.read_csv('/kaggle/input/imdb-ptbr/imdb-reviews-pt-br.csv')\nreviews_train_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:25.186437Z","iopub.execute_input":"2025-03-25T19:11:25.186692Z","iopub.status.idle":"2025-03-25T19:11:28.387763Z","shell.execute_reply.started":"2025-03-25T19:11:25.186671Z","shell.execute_reply":"2025-03-25T19:11:28.386015Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   id                                            text_en  \\\n0   1  Once again Mr. Costner has dragged out a movie...   \n1   2  This is an example of why the majority of acti...   \n2   3  First of all I hate those moronic rappers, who...   \n3   4  Not even the Beatles could write songs everyon...   \n4   5  Brass pictures movies is not a fitting word fo...   \n\n                                             text_pt sentiment  \n0  Mais uma vez, o Sr. Costner arrumou um filme p...       neg  \n1  Este é um exemplo do motivo pelo qual a maiori...       neg  \n2  Primeiro de tudo eu odeio esses raps imbecis, ...       neg  \n3  Nem mesmo os Beatles puderam escrever músicas ...       neg  \n4  Filmes de fotos de latão não é uma palavra apr...       neg  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>text_en</th>\n      <th>text_pt</th>\n      <th>sentiment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Once again Mr. Costner has dragged out a movie...</td>\n      <td>Mais uma vez, o Sr. Costner arrumou um filme p...</td>\n      <td>neg</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>This is an example of why the majority of acti...</td>\n      <td>Este é um exemplo do motivo pelo qual a maiori...</td>\n      <td>neg</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>First of all I hate those moronic rappers, who...</td>\n      <td>Primeiro de tudo eu odeio esses raps imbecis, ...</td>\n      <td>neg</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Not even the Beatles could write songs everyon...</td>\n      <td>Nem mesmo os Beatles puderam escrever músicas ...</td>\n      <td>neg</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Brass pictures movies is not a fitting word fo...</td>\n      <td>Filmes de fotos de latão não é uma palavra apr...</td>\n      <td>neg</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"# Converter os valores da coluna 'sentiment' para binário\nreviews_train_df['sentiment'] = reviews_train_df['sentiment'].map({'neg': 0, 'pos': 1})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:28.388716Z","iopub.execute_input":"2025-03-25T19:11:28.388964Z","iopub.status.idle":"2025-03-25T19:11:28.401477Z","shell.execute_reply.started":"2025-03-25T19:11:28.388942Z","shell.execute_reply":"2025-03-25T19:11:28.399809Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"reviews_train_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:28.402566Z","iopub.execute_input":"2025-03-25T19:11:28.402908Z","iopub.status.idle":"2025-03-25T19:11:28.416693Z","shell.execute_reply.started":"2025-03-25T19:11:28.402876Z","shell.execute_reply":"2025-03-25T19:11:28.415754Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   id                                            text_en  \\\n0   1  Once again Mr. Costner has dragged out a movie...   \n1   2  This is an example of why the majority of acti...   \n2   3  First of all I hate those moronic rappers, who...   \n3   4  Not even the Beatles could write songs everyon...   \n4   5  Brass pictures movies is not a fitting word fo...   \n\n                                             text_pt  sentiment  \n0  Mais uma vez, o Sr. Costner arrumou um filme p...          0  \n1  Este é um exemplo do motivo pelo qual a maiori...          0  \n2  Primeiro de tudo eu odeio esses raps imbecis, ...          0  \n3  Nem mesmo os Beatles puderam escrever músicas ...          0  \n4  Filmes de fotos de latão não é uma palavra apr...          0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>text_en</th>\n      <th>text_pt</th>\n      <th>sentiment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Once again Mr. Costner has dragged out a movie...</td>\n      <td>Mais uma vez, o Sr. Costner arrumou um filme p...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>This is an example of why the majority of acti...</td>\n      <td>Este é um exemplo do motivo pelo qual a maiori...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>First of all I hate those moronic rappers, who...</td>\n      <td>Primeiro de tudo eu odeio esses raps imbecis, ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Not even the Beatles could write songs everyon...</td>\n      <td>Nem mesmo os Beatles puderam escrever músicas ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Brass pictures movies is not a fitting word fo...</td>\n      <td>Filmes de fotos de latão não é uma palavra apr...</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"# Ajustando df para colunas que importam\nreviews_train_df_novo = reviews_train_df[['text_pt', 'sentiment']]\nreviews_train_df_novo.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:28.417588Z","iopub.execute_input":"2025-03-25T19:11:28.417844Z","iopub.status.idle":"2025-03-25T19:11:28.441967Z","shell.execute_reply.started":"2025-03-25T19:11:28.417820Z","shell.execute_reply":"2025-03-25T19:11:28.441097Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"                                             text_pt  sentiment\n0  Mais uma vez, o Sr. Costner arrumou um filme p...          0\n1  Este é um exemplo do motivo pelo qual a maiori...          0\n2  Primeiro de tudo eu odeio esses raps imbecis, ...          0\n3  Nem mesmo os Beatles puderam escrever músicas ...          0\n4  Filmes de fotos de latão não é uma palavra apr...          0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text_pt</th>\n      <th>sentiment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Mais uma vez, o Sr. Costner arrumou um filme p...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Este é um exemplo do motivo pelo qual a maiori...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Primeiro de tudo eu odeio esses raps imbecis, ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Nem mesmo os Beatles puderam escrever músicas ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Filmes de fotos de latão não é uma palavra apr...</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"# Remoçao de palavras sem sentido semantico utilizando o spaCy, para manter o contexto\n\n!pip install spacy\n!python -m spacy download pt_core_news_sm\n\nimport spacy\n\nnlp = spacy.load(\"pt_core_news_sm\")\n\ndef preprocess_text(text):\n    text = text.lower()\n\n    doc = nlp(text)\n\n    cleaned_tokens = [\n        token.lemma_ for token in doc\n        if not token.is_punct\n        and not token.is_space\n        and not token.is_stop\n        and not token.like_url\n        and not token.like_email\n        and token.is_alpha\n        and len(token.text) > 2\n    ]\n\n    cleaned_text = \" \".join(cleaned_tokens)\n    return cleaned_text","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:28.442892Z","iopub.execute_input":"2025-03-25T19:11:28.443190Z","iopub.status.idle":"2025-03-25T19:11:41.265528Z","shell.execute_reply.started":"2025-03-25T19:11:28.443158Z","shell.execute_reply":"2025-03-25T19:11:41.264557Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: spacy in /usr/local/lib/python3.10/dist-packages (3.7.5)\nRequirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.0.12)\nRequirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.0.5)\nRequirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.0.11)\nRequirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.0.10)\nRequirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.0.9)\nRequirement already satisfied: thinc<8.3.0,>=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (8.2.5)\nRequirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.1.3)\nRequirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.5.0)\nRequirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.0.10)\nRequirement already satisfied: weasel<0.5.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (0.4.1)\nRequirement already satisfied: typer<1.0.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (0.15.1)\nRequirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (4.67.1)\nRequirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.32.3)\nRequirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.11.0a2)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.1.4)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy) (75.1.0)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (24.2)\nRequirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.5.0)\nRequirement already satisfied: numpy>=1.19.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.26.4)\nRequirement already satisfied: language-data>=1.2 in /usr/local/lib/python3.10/dist-packages (from langcodes<4.0.0,>=3.2.0->spacy) (1.3.0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy) (2.4.1)\nRequirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy) (0.7.0)\nRequirement already satisfied: pydantic-core==2.29.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy) (2.29.0)\nRequirement already satisfied: typing-extensions>=4.12.2 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy) (4.12.2)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.4.1)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2.3.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2025.1.31)\nRequirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy) (0.7.11)\nRequirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy) (0.1.5)\nRequirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy) (8.1.7)\nRequirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy) (1.5.4)\nRequirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy) (13.9.4)\nRequirement already satisfied: cloudpathlib<1.0.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy) (0.20.0)\nRequirement already satisfied: smart-open<8.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy) (7.0.5)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy) (3.0.2)\nRequirement already satisfied: marisa-trie>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from language-data>=1.2->langcodes<4.0.0,>=3.2.0->spacy) (1.2.1)\nRequirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy) (2.19.1)\nRequirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from smart-open<8.0.0,>=5.2.1->weasel<0.5.0,>=0.1.0->spacy) (1.17.0)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy>=1.19.0->spacy) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy>=1.19.0->spacy) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy>=1.19.0->spacy) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy>=1.19.0->spacy) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy>=1.19.0->spacy) (2024.2.0)\nRequirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy) (0.1.2)\nCollecting pt-core-news-sm==3.7.0\n  Downloading https://github.com/explosion/spacy-models/releases/download/pt_core_news_sm-3.7.0/pt_core_news_sm-3.7.0-py3-none-any.whl (13.0 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.0/13.0 MB\u001b[0m \u001b[31m90.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m0:01\u001b[0m\n\u001b[?25hRequirement already satisfied: spacy<3.8.0,>=3.7.0 in /usr/local/lib/python3.10/dist-packages (from pt-core-news-sm==3.7.0) (3.7.5)\nRequirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.0.12)\nRequirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.0.5)\nRequirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.0.11)\nRequirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.0.10)\nRequirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.0.9)\nRequirement already satisfied: thinc<8.3.0,>=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (8.2.5)\nRequirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.1.3)\nRequirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.5.0)\nRequirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.0.10)\nRequirement already satisfied: weasel<0.5.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.4.1)\nRequirement already satisfied: typer<1.0.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.15.1)\nRequirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (4.67.1)\nRequirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.32.3)\nRequirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.11.0a2)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.1.4)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (75.1.0)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (24.2)\nRequirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.5.0)\nRequirement already satisfied: numpy>=1.19.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.26.4)\nRequirement already satisfied: language-data>=1.2 in /usr/local/lib/python3.10/dist-packages (from langcodes<4.0.0,>=3.2.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.3.0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.4.1)\nRequirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.7.0)\nRequirement already satisfied: pydantic-core==2.29.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.29.0)\nRequirement already satisfied: typing-extensions>=4.12.2 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (4.12.2)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.4.1)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.3.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2025.1.31)\nRequirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.7.11)\nRequirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.1.5)\nRequirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (8.1.7)\nRequirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.5.4)\nRequirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (13.9.4)\nRequirement already satisfied: cloudpathlib<1.0.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.20.0)\nRequirement already satisfied: smart-open<8.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (7.0.5)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.0.2)\nRequirement already satisfied: marisa-trie>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from language-data>=1.2->langcodes<4.0.0,>=3.2.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.2.1)\nRequirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2.19.1)\nRequirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from smart-open<8.0.0,>=5.2.1->weasel<0.5.0,>=0.1.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.17.0)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy>=1.19.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (2024.2.0)\nRequirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->pt-core-news-sm==3.7.0) (0.1.2)\n\u001b[38;5;2m✔ Download and installation successful\u001b[0m\nYou can now load the package via spacy.load('pt_core_news_sm')\n\u001b[38;5;3m⚠ Restart to reload dependencies\u001b[0m\nIf you are in a Jupyter or Colab notebook, you may need to restart Python in\norder to load all the package's dependencies. You can do this by selecting the\n'Restart kernel' or 'Restart runtime' option.\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"reviews_train_df_novo.loc[:, 'text_pt_processed'] = reviews_train_df_novo['text_pt'].apply(preprocess_text)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-25T19:11:41.266536Z","iopub.execute_input":"2025-03-25T19:11:41.266864Z","execution_failed":"2025-03-25T19:31:09.981Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"reviews_train_df_novo.head()","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.981Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"reviews_train_df_novo = reviews_train_df_novo.drop('text_pt', axis=1)","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Ajustando ordens da coluna (por puro toc)\nreviews_train_df_novo = reviews_train_df_novo[['text_pt_processed', 'sentiment']]\nreviews_train_df_novo.head()","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Treinos e testes","metadata":{}},{"cell_type":"code","source":"#Tokenizacao do dataset\nmodel_name = \"adalbertojunior/distilbert-portuguese-cased\"  # DistilBERT em português\ntokenizer = DistilBertTokenizer.from_pretrained(model_name)","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Separaçao dos dados de treinos e testes\ntrain_texts, val_texts, train_labels, val_labels = train_test_split(\n    reviews_train_df_novo['text_pt_processed'].values,\n    reviews_train_df_novo['sentiment'].values,\n    test_size=0.2,\n    random_state=SEED\n    )","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Conversão para lista de Strings\ntrain_texts = [str(text) for text in train_texts]  # Garante que são strings\nval_texts = [str(text) for text in val_texts]","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(type(train_texts))\nprint(type(train_labels))","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# classe para criaçao de um Dataset PyTorch permite otimizar o carregamento de dados e paralelizar a computação\n\nclass TextClassificationDataset(Dataset):\n    def __init__(self, texts, labels, tokenizer, max_length=256):\n        self.encodings = tokenizer(\n            texts, padding=True, truncation=True, max_length=max_length, return_tensors=\"pt\"\n        )\n        self.labels = torch.tensor(labels)\n\n    def __len__(self):\n        return len(self.labels)\n\n    def __getitem__(self, idx):\n        return {\n            \"input_ids\": self.encodings[\"input_ids\"][idx],\n            \"attention_mask\": self.encodings[\"attention_mask\"][idx],\n            \"labels\": self.labels[idx],\n        }","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Criaçao de dataset para treino e validaçao.\ntrain_dataset = TextClassificationDataset(train_texts, train_labels, tokenizer)\nval_dataset = TextClassificationDataset(val_texts, val_labels, tokenizer)","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Criacao de dataLoader para alimentar os modelos em lotes. O DataLoader permite carregar os dados em lotes (batch_size), tornando o treinamento mais eficiente\nbatch_size = 32\ntrain_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\nval_loader = DataLoader(val_dataset, batch_size=batch_size, shuffle=False)","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Carregamento do modelo pré-treinado BERT para classificação\nnum_labels = len(set(train_labels))  # Número de classes (geralmente 2 para sentimentos: positivo/negativo)\nmodel = DistilBertForSequenceClassification.from_pretrained(\n    model_name,\n    num_labels=num_labels,\n    attention_probs_dropout_prob=0.3,  # Recomendado para evitar overfitting\n    hidden_dropout_prob=0.3\n)\nmodel.to(device)  # Mover para GPU se disponível","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Função de perda para classificação\ncriterion = torch.nn.CrossEntropyLoss()\n\n# Otimizador AdamW recomendado para transformers\noptimizer = AdamW(model.parameters(), lr=2e-5, eps=1e-8)","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from torch.cuda.amp import autocast, GradScaler\n\n# Definindo épocas e Early stop\nnum_epochs = 5\nbest_val_loss = float(\"inf\")\npatience = 2\n\ndef train_loop_fn(loader, model, optimizer, device):\n    scaler = GradScaler()  # Instância do GradScaler ✅\n    best_val_loss = float(\"inf\")\n    patience_counter = 0\n\n    for epoch in range(num_epochs):\n        model.train()\n        total_loss = 0\n        \n        for batch in loader:\n            optimizer.zero_grad()  # Resetar gradientes antes de cada passo\n            \n            inputs = {k: v.to(device) for k, v in batch.items()}\n            \n            # Forward pass com autocast para mixed precision 💡\n            with autocast():\n                outputs = model(**inputs)\n                loss = outputs.loss\n            \n            # Backpropagation com scaling de gradientes \n            scaler.scale(loss).backward()  # ⚠️ Não usar loss.backward() \n            \n            # Atualização dos pesos\n            scaler.step(optimizer)  # Substitui optimizer.step()\n            scaler.update()  # Ajusta o scale factor para o próximo passo\n            \n            total_loss += loss.item()\n\n        avg_loss = total_loss / len(loader)\n        print(f\"🔹 Época {epoch+1}: Loss médio: {avg_loss:.4f}\")\n\n        # Validação\n        model.eval()\n        total_val_loss = 0\n        predictions, true_labels = [], []\n        \n        with torch.no_grad():\n            for batch in val_loader:\n                inputs = {k: v.to(device) for k, v in batch.items()}\n                outputs = model(**inputs)\n                total_val_loss += outputs.loss.item()\n                \n                preds = torch.argmax(outputs.logits, dim=1)\n                predictions.extend(preds.cpu().numpy())\n                true_labels.extend(inputs['labels'].cpu().numpy())\n\n        avg_val_loss = total_val_loss / len(val_loader)\n        accuracy = accuracy_score(true_labels, predictions)\n        print(f\"🔸 Época {epoch+1}: Loss Validação: {avg_val_loss:.4f}, Acurácia: {accuracy:.4f}\")\n\n        # Early Stopping\n        if avg_val_loss < best_val_loss:\n            best_val_loss = avg_val_loss\n            patience_counter = 0\n            # Salvar melhor modelo\n            torch.save(model.state_dict(), \"/kaggle/working/melhor_modelo.pt\")\n        else:\n            patience_counter += 1\n            print(f\"⚠️ EarlyStopping: {patience_counter}/{patience}\")\n\n        if patience_counter >= patience:\n            print(\"⏹️ EarlyStopping ativado!\")\n            break","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Execução do treinamento\ntrain_loop_fn(train_loader, model, optimizer, device)","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Salvando Modelo","metadata":{}},{"cell_type":"code","source":"# Salvar modelo final (após todo o treinamento)\nmodel.save_pretrained(\"/kaggle/working/imdb-ptbrmodelo_bert_treinado\")\ntokenizer.save_pretrained(\"/kaggle/working/imdb-ptbrmodelo_bert_treinado\")","metadata":{"trusted":true,"execution":{"execution_failed":"2025-03-25T19:31:09.982Z"}},"outputs":[],"execution_count":null}]}